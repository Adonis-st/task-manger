import { useRouter } from "next/router";
import Head from "next/head";
import Error from "next/error";
import { trpc } from "../../utils/trpc";
import { Column } from "../../components/Column";
import { Spinner } from "../../components/Spinner";
import { useSession } from "next-auth/react";
import { VscLoading } from "react-icons/vsc";

export default function BoardPage() {
  const { data: sessionData } = useSession();
  const router = useRouter();

  const boardId = router.query.boardId as string;
  const {
    data: singleBoard,
    isLoading,
    refetch,
  } = trpc.boards.singleBoard.useQuery(
    {
      boardId,
    },
    { refetchOnWindowFocus: false }
  );

  // const isEmpty = singleBoard?.columns.length === 0;
  const currentColumns = singleBoard?.columns;

  const { mutate: addColumn, isLoading: addColumnIsLoading } =
    trpc.columns.addColumn.useMutation({ onSuccess: () => refetch() });

  if (!sessionData) {
    return null;
  }

  if (isLoading) {
    return <Spinner />;
  }

  if (!singleBoard) {
    return <Error statusCode={404} />;
  }

  return (
    <>
      <Head>
        <title>{singleBoard.title}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        {/* {isEmpty && (
          <div>
            This board is empty Create a new Column to get Started.
            <button onClick={onSubmit} className="btn-primary-s">
              + Add New Column
            </button>
          </div>
        )} */}
        <div className="grid h-[91vh] auto-cols-max grid-flow-col gap-x-4 overflow-x-auto">
          {singleBoard?.columns.map((col, index) => {
            return (
              <Column
                key={col.id}
                col={col}
                currentColumns={currentColumns}
                refetch={refetch}
                index={index}
              />
            );
          })}
          {singleBoard?.columns.length < 4 && (
            <button
              onClick={() => addColumn({ boardId })}
              className="heading-xl mt-4 mr-8 hidden h-[95%] min-w-[270px] bg-[#E9EFFA] text-medium_gray shadow-md hover:text-purple lg:block"
            >
              {addColumnIsLoading ? (
                <VscLoading className="mx-auto h-12 w-12 animate-spin" />
              ) : (
                "+ New Column"
              )}
            </button>
          )}
        </div>
      </div>
    </>
  );
}
